- name: Ensure system groups exists
  become: yes
  group: name={{service}} state=present

- name: Ensure system user exists
  become: yes
  user: name={{service}} group={{service}}

# ---- Deploy! ---- See: http://docs.ansible.com/ansible/deploy_helper_module.html
- name: Initialize the deploy root and gather facts
  become: yes
  become_user: "{{service}}"
  deploy_helper: path=/home/{{service}}

- name: Create the release dir
  become: yes
  file: path={{ deploy_helper.new_release_path }} state=directory owner={{service}} group={{service}} mode=0700

- name: Clone the project to the new release folder
  become: yes
  become_user: "{{service}}"
  git: dest={{ deploy_helper.new_release_path }}/src repo=https://github.com/{{repo}}.git version=HEAD depth=1 update=yes force=yes

- name: Add an unfinished file, to allow cleanup on successful finalize
  become: yes
  file: state=touch path={{ deploy_helper.new_release_path }}/{{ deploy_helper.unfinished_filename }}

- name: Install our npm dependencies
  become: yes
  become_user: "{{service}}"
  shell: npm install --production
  args:
    chdir: "{{ deploy_helper.new_release_path }}/src"
  notify:
    - Restart {{service}}

- name: Copy config
  become: yes
  template: src=.upmonrc dest={{ deploy_helper.new_release_path }}/.upmonrc force=yes

- name: Finalize the deploy, removing the unfinished file and switching the symlink
  become: yes
  deploy_helper: path=/home/{{service}} release={{ deploy_helper.new_release }} state=finalize

# ---- END deploy_helper

- name: Copy systemd config
  become: yes
  template: src=systemd.service dest=/etc/systemd/system/{{service}}.service mode=0644 force=yes

- name: Restart the app
  become: yes
  service: name={{service}} state=restarted enabled=yes

- name: Copy Nginx config
  become: yes
  template: src=nginx.conf dest=/etc/nginx/conf.d/{{service}}.conf mode=0644 force=yes
  notify:
    - Restart Nginx
